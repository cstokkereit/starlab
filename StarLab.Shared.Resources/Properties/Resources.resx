<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutStarLab" xml:space="preserve">
    <value>About StarLab</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddDocument" xml:space="preserve">
    <value>Add New Document</value>
  </data>
  <data name="Axes" xml:space="preserve">
    <value>Axes</value>
  </data>
  <data name="AxisX1" xml:space="preserve">
    <value>X1</value>
  </data>
  <data name="AxisX2" xml:space="preserve">
    <value>X2</value>
  </data>
  <data name="AxisY1" xml:space="preserve">
    <value>Y1</value>
  </data>
  <data name="AxisY2" xml:space="preserve">
    <value>Y2</value>
  </data>
  <data name="BackColour" xml:space="preserve">
    <value>Back Colour</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CannotRenameItem" xml:space="preserve">
    <value>Cannot rename '{0}' to '{1}' because a {2} with that name already exists.</value>
  </data>
  <data name="CannotRenameWorkspace" xml:space="preserve">
    <value>Cannot rename '{0}' to '{1}' because a workspace with that name already exists at this location.</value>
  </data>
  <data name="Chart" xml:space="preserve">
    <value>Chart</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CloseWorkspace" xml:space="preserve">
    <value>Close Workspace</value>
  </data>
  <data name="CollapseAll" xml:space="preserve">
    <value>Collapse All</value>
  </data>
  <data name="CollapseAllDescendants" xml:space="preserve">
    <value>Collapse All Descendants</value>
  </data>
  <data name="CompanyName" xml:space="preserve">
    <value>Stratosoft</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>© 2024 All rights reserved etc.</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="Data" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="DefaultFolderName" xml:space="preserve">
    <value>New Folder</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DeletionWarning" xml:space="preserve">
    <value>'{0}' will be deleted permanently.</value>
  </data>
  <data name="DestinationSameAsSource" xml:space="preserve">
    <value>Cannot move '{0}'. The destination folder is the same as the source folder.</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="DocumentAlreadyExists" xml:space="preserve">
    <value>A document with the name '{0}' already exists. Do you want to replace it?</value>
  </data>
  <data name="EndOfFile" xml:space="preserve">
    <value>Cannot read past the end of the file.</value>
  </data>
  <data name="Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="FieldMapNotSet" xml:space="preserve">
    <value>The field map has not been set.</value>
  </data>
  <data name="File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="FileNotFound" xml:space="preserve">
    <value>The file {0} could not be found.
Check the filename and try again.</value>
  </data>
  <data name="Folder" xml:space="preserve">
    <value>Folder</value>
  </data>
  <data name="FolderAlreadyExists" xml:space="preserve">
    <value>This folder already contains a folder called '{0}'.

If documents in the existing folder have the same names as documents in the folder you are copying, do you want to replace the existing documents?</value>
  </data>
  <data name="FolderDeletionWarning" xml:space="preserve">
    <value>The {0} '{1}' and all of its contents will be deleted permanently.</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="InitialisationComplete" xml:space="preserve">
    <value>Initialisation complete. Starting the application.</value>
  </data>
  <data name="InitialisationFailed" xml:space="preserve">
    <value>Initialisation failed. The application configuration could not be loaded.</value>
  </data>
  <data name="InvalidContentType" xml:space="preserve">
    <value>Invalid content type: {0}</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="NameAlreadyExists" xml:space="preserve">
    <value>A {0} with the name '{1}' already exists at this location.
Please provide a unique name for the {0}.</value>
  </data>
  <data name="NameCannotInclude" xml:space="preserve">
    <value>{0} names cannot include any of the following:

                               {1}

Please enter a valid name.</value>
  </data>
  <data name="NameNullOrEmpty" xml:space="preserve">
    <value>The {0} name cannot be an empty string.</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>New Folder</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NotInitialised" xml:space="preserve">
    <value>This instance has not been properly initialised.</value>
  </data>
  <data name="ObjectNotInitialised" xml:space="preserve">
    <value>This object has not been properly initialised.</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Open" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="OpenWorkspace" xml:space="preserve">
    <value>Open Workspace</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
  </data>
  <data name="PageSetup" xml:space="preserve">
    <value>Page Setup</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="PlotArea" xml:space="preserve">
    <value>Plot Area</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="PrintPreview" xml:space="preserve">
    <value>Print Preview</value>
  </data>
  <data name="ProductDescription" xml:space="preserve">
    <value>Its a thing</value>
  </data>
  <data name="Project" xml:space="preserve">
    <value>Project</value>
  </data>
  <data name="ProjectDeletionWarning" xml:space="preserve">
    <value>The project '{0}' will be deleted permanently.</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveAll" xml:space="preserve">
    <value>Save All</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="SaveWorkspace" xml:space="preserve">
    <value>Save Workspace</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="StarLab" xml:space="preserve">
    <value>StarLab</value>
  </data>
  <data name="SyncWithActiveDocument" xml:space="preserve">
    <value>Sync With Active Document</value>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Tools" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="UnexpectedViewType" xml:space="preserve">
    <value>Unexpected view type: {0}</value>
  </data>
  <data name="UnknownType" xml:space="preserve">
    <value>Unknown type: {0}</value>
  </data>
  <data name="UnrecognisedViewType" xml:space="preserve">
    <value>Unrecognised view type: {0}</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version {0}</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewHelp" xml:space="preserve">
    <value>View Help</value>
  </data>
  <data name="Window" xml:space="preserve">
    <value>Window</value>
  </data>
  <data name="Workspace" xml:space="preserve">
    <value>Workspace</value>
  </data>
  <data name="WorkspaceClosing" xml:space="preserve">
    <value>The workspace contains items with unsaved changes. Do you want to save your changes?</value>
  </data>
  <data name="WorkspaceCouldNotBeOpened" xml:space="preserve">
    <value>The file {0} could not be opened.</value>
  </data>
  <data name="WorkspaceExplorer" xml:space="preserve">
    <value>Workspace Explorer</value>
  </data>
  <data name="WorkspaceFileFilter" xml:space="preserve">
    <value>(*.slw)|*.slw</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="InstanceCreated" xml:space="preserve">
    <value>{0} created.</value>
  </data>
</root>